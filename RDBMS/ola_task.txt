1) Retrieve the names and locations of restaurants with a rating of 4.5 or higher.
 
SELECT Name, City
FROM Restaurants
WHERE Rating >= 4.5;

 2. Find the total number of orders placed by each customer.

SELECT
    c.CustomerID,
    c.FirstName,
    c.LastName,
    COUNT(o.OrderID) AS TotalOrders
FROM
    Customers c
LEFT JOIN
    Orders o ON c.CustomerID = o.CustomerID
GROUP BY
    c.CustomerID,
    c.FirstName,
    c.LastName
ORDER BY
    TotalOrders DESC;


 3. List all restaurants offering "Italian" cuisine in "Mumbai".

SELECT Name, City, CuisineType
FROM Restaurants
WHERE City = 'Mumbai' AND CuisineType = 'Italian';


 4. Calculate the total revenue generated by each restaurant from completed orders.

SELECT
    r.RestaurantID,
    r.Name,
    SUM(o.OrderAmount) AS TotalRevenue
FROM
    Restaurants r
JOIN
    Orders o ON r.RestaurantID = o.RestaurantID
WHERE
    o.OrderStatus = 'Delivered'
GROUP BY
    r.RestaurantID,
    r.Name
ORDER BY
    TotalRevenue DESC;

 5. Retrieve the most recent order placed by each customer.

WITH RankedOrders AS (
    SELECT
        o.OrderID,
        o.CustomerID,
        o.RestaurantID,
        o.OrderDate,
        o.OrderAmount,
        o.OrderStatus,
        ROW_NUMBER() OVER (PARTITION BY o.CustomerID ORDER BY o.OrderDate DESC) AS rn
    FROM
        Orders o
)
SELECT
    ro.OrderID,
    ro.CustomerID,
    c.FirstName,
    c.LastName,
    ro.RestaurantID,
    r.Name AS RestaurantName,
    ro.OrderDate,
    ro.OrderAmount,
    ro.OrderStatus
FROM
    RankedOrders ro
JOIN
    Customers c ON ro.CustomerID = c.CustomerID
JOIN
    Restaurants r ON ro.RestaurantID = r.RestaurantID
WHERE
    ro.rn = 1;


 6. List customers who have not placed any orders yet.

SELECT
    c.CustomerID,
    c.FirstName,
    c.LastName,
    c.Phone,
    c.City,
    c.JoinDate
FROM
    Customers c
    LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
WHERE
    o.OrderID IS NULL;


 7. Identify the most reviewed restaurants.

SELECT
    r.RestaurantID,
    r.Name,
    COUNT(rv.ReviewID) AS ReviewCount
FROM
    Restaurants r
LEFT JOIN
    Reviews rv ON r.RestaurantID = rv.RestaurantID
GROUP BY
    r.RestaurantID,
    r.Name
ORDER BY
    ReviewCount DESC;


 8. Find the most preferred payment method.

SELECT
    PaymentMethod,
    COUNT(*) AS MethodCount
FROM
    Payments
GROUP BY
    PaymentMethod
ORDER BY
    MethodCount DESC
LIMIT 1;

 9. List the top 5 restaurants by total revenue.

SELECT
    r.RestaurantID,
    r.Name,
    SUM(o.OrderAmount) AS TotalRevenue
FROM
    Restaurants r
JOIN
    Orders o ON r.RestaurantID = o.RestaurantID
WHERE
    o.OrderStatus = 'Delivered'
GROUP BY
    r.RestaurantID,
    r.Name
ORDER BY
    TotalRevenue DESC
LIMIT 5;


 10. Show the details of all cancelled orders along with the customer's and restaurant's names.

SELECT
    o.OrderID,
    o.OrderDate,
    o.OrderAmount,
    c.FirstName AS CustomerFirstName,
    c.LastName AS CustomerLastName,
    r.Name AS RestaurantName
FROM
    Orders o
JOIN
    Customers c ON o.CustomerID = c.CustomerID
JOIN
    Restaurants r ON o.RestaurantID = r.RestaurantID
WHERE
    o.OrderStatus = 'Cancelled';

