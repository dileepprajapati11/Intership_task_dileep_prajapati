1. Retrieve the names and contact details of all drivers with a rating of 4.5 or higher.

SELECT
    d.DriverID,
    d.FirstName,
    d.phone
FROM
    Drivers d
WHERE
    d.Rating >= 4.5;

 2. Find the total number of rides completed by each driver.

SELECT
    d.DriverID,
    d.FirstName,
    COUNT(r.RideID) AS TotalRides
FROM
    Drivers d
JOIN
    Rides r ON d.DriverID = r.DriverID
WHERE
    r.RideStatus = 'Completed'
GROUP BY
    d.DriverID,
    d.FirstName
ORDER BY
    TotalRides DESC;

 3. List all riders who have never booked a ride.

SELECT
    r.RiderID,
    r.FirstName,
    r.phone
FROM
    Riders r
LEFT JOIN
    Rides ri ON r.RiderID = ri.RiderID
WHERE
    ri.RideID IS NULL;


 4. Calculate the total earnings of each driver from completed rides.

SELECT
    d.DriverID,
    d.FirstName,
    SUM(r.Fare) AS TotalEarnings
FROM
    Drivers d
JOIN
    Rides r ON d.DriverID = r.DriverID
WHERE
    r.RideStatus = 'Completed'
GROUP BY
    d.DriverID,
    d.FirstName
ORDER BY
    TotalEarnings DESC;



 5. Retrieve the most recent ride for each rider.

SELECT
    r.RiderID,
    r.FirstName,
    ri.RideID,
    ri.RideDate,
    ri.RideStatus
FROM
    Riders r
JOIN
    Rides ri ON r.RiderID = ri.RiderID
WHERE
    ri.RideDate = (
        SELECT MAX(RideDate)
        FROM Rides
        WHERE RiderID = r.RiderID
    );


 6. Count the number of rides taken in each city.

SELECT
    r.City,
    COUNT(ri.RideID) AS NumberOfRides
FROM
    Rides ri
JOIN
    Riders r ON ri.RiderID = r.RiderID
GROUP BY
    r.City
ORDER BY
    NumberOfRides DESC;


 7. List all rides where the distance was greater than 20 km.

SELECT
    r.RideID,
    r.RiderID,
    r.DriverID,
    r.PickupLocation,
    r.DropLocation,
    r.Distance,
    r.RideDate,
    r.RideStatus
FROM
    Rides r
WHERE
    r.Distance > 20;



 8. Identify the most preferred payment method.

SELECT
    PaymentMethod,
    COUNT(*) AS UsageCount
FROM
    Payments
GROUP BY
    PaymentMethod
ORDER BY
    UsageCount DESC
LIMIT 1;

 9. Find the top 3 highest-earning drivers.

SELECT
    d.DriverID,
    d.FirstName,
    SUM(p.Amount) AS TotalEarnings
FROM
    Drivers d
JOIN
    Rides r ON d.DriverID = r.DriverID
JOIN
    Payments p ON r.RideID = p.RideID
WHERE
    r.RideStatus = 'Completed'
GROUP BY
    d.DriverID,
    d.FirstName
ORDER BY
    TotalEarnings DESC
LIMIT 3;


10. Retrieve details of all cancelled rides along with the rider's and driver's names

SELECT
    r.RideID,
    r.RideDate,
    r.PickupLocation,
    r.DropLocation,
    r.Distance,
    r.RideStatus,
    ri.FirstName,
    d.FirstName
FROM
    Rides r
JOIN
    Riders ri ON r.RiderID = ri.RiderID
JOIN
    Drivers d ON r.DriverID = d.DriverID
WHERE
    r.RideStatus = 'Cancelled';